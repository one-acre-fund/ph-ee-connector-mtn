trigger:
  - master
  - develop

pr:
  - master
  - release/*
  - develop

pool:
  vmImage: "ubuntu-latest"

steps:
  - script: |
      VERSION_TAG=`git describe --abbrev=0 --tags`
      echo "##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG"
      IMAGE_TAGS="${VERSION_TAG}"
      echo "##vso[task.setvariable variable=IMAGE_SEMANTIC_HASH]$IMAGE_TAGS"
      if [[ "$(Build.SourceBranch)" == "refs/heads/master" ]]; then IMAGE_TAGS="$IMAGE_TAGS,latest"; fi;
      echo Tags: $IMAGE_TAGS
      echo "##vso[task.setvariable variable=IMAGE_TAGS]$IMAGE_TAGS"
    displayName: Get git tag

  - script: |
      docker run -v "$(System.DefaultWorkingDirectory):/tmp/lint" --workdir /tmp/lint -e GIT_AUTHORIZATION_BEARER=$(System.AccessToken) megalinter/megalinter
    displayName: MegaLinter analysis
    continueOnError: true

  - task: Docker@2
    displayName: Login to Azure registry
    inputs:
      containerRegistry: "azurecr-oaf"
      command: "login"

  - task: Docker@2
    displayName: Build and push an image to container registry
    inputs:
      command: buildAndPush
      repository: "oneacrefund/mtn-connector"
      dockerfile: "$(System.DefaultWorkingDirectory)/Dockerfile"
      containerRegistry: "azurecr-oaf"
      tags: |
        $(IMAGE_TAGS)

  - task: PublishBuildArtifacts@1
    displayName: Publish configuration package
    # Only publish develop branch
    # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: "mtn-connector"
      publishLocation: "Container"
